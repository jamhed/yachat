// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

define(["pi/Pi"], function(Pi) {
  var Register;
  return Register = (function(superClass) {
    extend(Register, superClass);

    function Register() {
      return Register.__super__.constructor.apply(this, arguments);
    }

    Register.prototype.attr = function() {
      return Register.__super__.attr.apply(this, arguments).concat(["row"]);
    };

    Register.prototype.init = function() {
      return this.sub("#bullet@user/register", (function(_this) {
        return function(e, args) {
          var status;
          return status = args[0], args;
        };
      })(this));
    };

    Register.prototype.error = function() {
      var m;
      m = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this.rt.append("dialog/error", {
        text: m
      });
    };

    return Register;

  })(Pi);
});
