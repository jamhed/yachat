// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["pi/Pi", "Cmon", "pi/lib/upload"], function(aPi, Cmon, Upload) {
  return Upload = (function(superClass) {
    extend(Upload, superClass);

    function Upload() {
      return Upload.__super__.constructor.apply(this, arguments);
    }

    Upload.prototype.init = function() {
      return this.e.fileupload({
        formData: [
          {
            name: "sid",
            value: Cmon.sid()
          }
        ]
      });
    };

    return Upload;

  })(aPi);
});
