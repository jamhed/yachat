// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["pi/Pi"], function(Pi) {
  var Conv;
  return Conv = (function(superClass) {
    extend(Conv, superClass);

    function Conv() {
      return Conv.__super__.constructor.apply(this, arguments);
    }

    Conv.prototype.attr = function() {
      return Conv.__super__.attr.apply(this, arguments).concat(["row"]);
    };

    Conv.prototype.init = function() {
      return this.sub("#bullet@conv/new", (function(_this) {
        return function(e, args) {
          var convId, response;
          response = args[0], convId = args[1];
          return _this.e.val(convId);
        };
      })(this));
    };

    return Conv;

  })(Pi);
});
