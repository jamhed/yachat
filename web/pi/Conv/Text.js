// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["Nsend", "Cmon"], function(Pi, Cmon) {
  var ConvText;
  return ConvText = (function(superClass) {
    extend(ConvText, superClass);

    function ConvText() {
      return ConvText.__super__.constructor.apply(this, arguments);
    }

    ConvText.prototype.attr = function() {
      return ConvText.__super__.attr.apply(this, arguments).concat(["stamp", "text"]);
    };

    ConvText.prototype.draw = function(rows) {
      var i, len, msg, ref, results, row, user;
      this.clear();
      ref = rows.reverse();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        row = ref[i];
        user = row[0], msg = row[1];
        results.push(this.append(user, msg));
      }
      return results;
    };

    ConvText.prototype.query = function() {
      return this.nsend(["conv/history", Cmon.sid(), Cmon.conv_id()], (function(_this) {
        return function(status, rows) {
          return _this.draw(rows);
        };
      })(this));
    };

    ConvText.prototype.init = function() {
      this.sub("#bullet@new_msg", (function(_this) {
        return function(e, args) {
          var convId, msg, user;
          convId = args[0], user = args[1], msg = args[2];
          return _this.append(user, msg);
        };
      })(this));
      this.sub("#bullet@sys_msg", (function(_this) {
        return function(e, args) {
          var convId, msg, user;
          convId = args[0], user = args[1], msg = args[2];
          return _this.append(user, msg);
        };
      })(this));
      this.sub("#bullet@conv/status/part", (function(_this) {
        return function(e, args) {
          return _this.clear();
        };
      })(this));
      this.sub("#bullet@conv/status/join", (function(_this) {
        return function(e, args) {
          return _this.query();
        };
      })(this));
      this.sub("#bullet@user/status/registered", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      this.sub("#bullet@user/status/anonymous", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      return this.sub("#bullet@user/status/not_logged", (function(_this) {
        return function(ev, args) {
          return _this.clear();
        };
      })(this));
    };

    ConvText.prototype.append = function(user, msg) {
      var holder, stamp, stamp_div, text, text_div;
      stamp = msg[0], text = msg[1];
      text_div = $("<div>").addClass(this.a.text).html(text);
      stamp_div = $("<div>").addClass(this.a.stamp).html(stamp + "&nbsp;&nbsp;" + Cmon.displayNameA(user) + ":");
      holder = $("<div>").addClass("row");
      holder.prepend(text_div);
      holder.prepend(stamp_div);
      return this.e.prepend(holder);
    };

    return ConvText;

  })(Pi);
});
