// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["Nsend", "pi/m/Source", "Cmon"], function(aPi, mSource, Cmon) {
  var ConvList;
  return ConvList = (function(superClass) {
    extend(ConvList, superClass);

    function ConvList() {
      return ConvList.__super__.constructor.apply(this, arguments);
    }

    ConvList.prototype.attr = function() {
      return ConvList.__super__.attr.apply(this, arguments).concat(["view"]);
    };

    ConvList.prototype.draw = function(List) {
      var User, i, len, tmpl;
      this.clear();
      tmpl = this.rt.source(this.a.view);
      for (i = 0, len = List.length; i < len; i++) {
        User = List[i];
        this.e.append(tmpl({
          id: User.id,
          display: Cmon.displayNameA(User)
        }));
      }
      return this.rt.pi(this.e);
    };

    ConvList.prototype.query = function() {
      return this.nsend(["conv/users", Cmon.sid(), Cmon.conv_id()], (function(_this) {
        return function(status, List) {
          return _this.draw(List);
        };
      })(this));
    };

    ConvList.prototype.init = function() {
      this.sub("#bullet@conv/status/invite", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      this.sub("#bullet@conv/status/join", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      this.sub("#bullet@conv/status/part", (function(_this) {
        return function(ev, args) {
          return _this.clear();
        };
      })(this));
      this.sub("#bullet@user/status/registered", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      this.sub("#bullet@user/status/anonymous", (function(_this) {
        return function(ev, args) {
          return _this.query();
        };
      })(this));
      return this.sub("#bullet@user/status/not_logged", (function(_this) {
        return function(ev, args) {
          return _this.clear();
        };
      })(this));
    };

    return ConvList;

  })(aPi);
});
