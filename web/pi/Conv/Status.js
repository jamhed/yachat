// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["pi/Pi", "pi/m/Source"], function(aPi, mSource) {
  var ConvStatus;
  return ConvStatus = (function(superClass) {
    extend(ConvStatus, superClass);

    function ConvStatus() {
      return ConvStatus.__super__.constructor.apply(this, arguments);
    }

    ConvStatus.prototype.attr = function() {
      return ConvStatus.__super__.attr.apply(this, arguments).concat(["join", "leave"]);
    };

    ConvStatus.prototype.init = function() {
      this.sub("#bullet@conv/join", (function(_this) {
        return function(ev, args) {
          _this.e.html(mSource.get(_this.a.leave));
          return _this.rt.pi(_this.e);
        };
      })(this));
      this.sub("#bullet@conv/new", (function(_this) {
        return function(ev, args) {
          _this.e.html(mSource.get(_this.a.leave));
          return _this.rt.pi(_this.e);
        };
      })(this));
      return this.sub("#bullet@conv/leave", (function(_this) {
        return function(ev) {
          _this.e.html(mSource.get(_this.a.join));
          return _this.rt.pi(_this.e);
        };
      })(this));
    };

    return ConvStatus;

  })(aPi);
});
