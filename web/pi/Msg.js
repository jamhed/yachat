// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["pi/Pi"], function(Pi) {
  var Msg;
  return Msg = (function(superClass) {
    extend(Msg, superClass);

    function Msg() {
      return Msg.__super__.constructor.apply(this, arguments);
    }

    Msg.prototype.attr = function() {
      return Msg.__super__.attr.apply(this, arguments).concat(["target"]);
    };

    Msg.prototype.init = function() {
      return this.e.keyup((function(_this) {
        return function(e) {
          if (e.keyCode === 13) {
            return _this.rpc(_this.a.target, [_this.e.val()], function() {
              return _this.e.val("");
            });
          }
        };
      })(this));
    };

    return Msg;

  })(Pi);
});
