// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(["pi/Pi"], function(Pi) {
  var Dumper;
  return Dumper = (function(superClass) {
    extend(Dumper, superClass);

    function Dumper() {
      return Dumper.__super__.constructor.apply(this, arguments);
    }

    Dumper.prototype.attr = function() {
      return Dumper.__super__.attr.apply(this, arguments).concat(["stamp", "text"]);
    };

    Dumper.prototype.init = function() {
      this.sub("#bullet@new_msg", (function(_this) {
        return function(e, args) {
          var convId, msg, user;
          convId = args[0], user = args[1], msg = args[2];
          return _this.append(user, msg);
        };
      })(this));
      this.sub("#bullet@conv/history", (function(_this) {
        return function(e, args) {
          var i, len, msg, ref, results, row, rows, status, user;
          status = args[0], rows = args[1];
          ref = rows.reverse();
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            row = ref[i];
            user = row[0], msg = row[1];
            results.push(_this.append(user, msg));
          }
          return results;
        };
      })(this));
      this.sub("#bullet@conv/status/part", (function(_this) {
        return function(e, args) {
          return _this.e.empty();
        };
      })(this));
      this.sub("#bullet@conv/status/join", (function(_this) {
        return function(e, args) {
          _this.rpc("#bullet@conv_history");
          return _this.e.empty();
        };
      })(this));
      return this.wait_ajax_done((function(_this) {
        return function() {
          return _this.debug("AJAX DONE");
        };
      })(this));
    };

    Dumper.prototype.append = function(user, msg) {
      var display, email, holder, id, name, stamp, stamp_div, text, text_div;
      id = user[0], name = user[1], email = user[2];
      stamp = msg[0], text = msg[1];
      display = name !== "undefined" ? name : email !== "undefined" ? email : id;
      text_div = $("<div>").addClass(this.a.text).html(text);
      stamp_div = $("<div>").addClass(this.a.stamp).html(stamp + "&nbsp;&nbsp;" + display + ":");
      holder = $("<div>").addClass("row");
      holder.prepend(text_div);
      holder.prepend(stamp_div);
      return this.e.prepend(holder);
    };

    return Dumper;

  })(Pi);
});
